<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Page Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/a076d05399.js"></script> <!-- Font Awesome for icons -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Include SweetAlert CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.css">

<!-- Include SweetAlert JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">


    <style>
        /* Your CSS styles */
        .container {
            display: flex;
            height: 80vh;
            margin-left: 0px;
        }

        .sidebar {
            background-color: #2791fc;
            width: 200px;
            margin-top: 50px;
            /* Adjust as needed */
            padding: 20px;
            display: flex;
            flex-direction: column;
            height: 70%;
            /* Adjust the height here */
           
        }

        .content-box {
            .content-box {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 20px;
    margin-bottom: 20px;
}
        }

/* Optional: Add styling to the table */
.table {
    max-width: 100%;
    border-collapse: collapse;
    margin-left: 5px;
    
}

.table th, .table td {
    border: 1px solid #ddd;
    padding: 7px;
    
    text-align: left;
}

.table th {
    background-color: #252729;
    color: #fff;
},
       flex: 1;
            padding: 20px;
        }

        .field {
            margin-top: 20px;
            /* Adjust the margin top inside the sidebar */
            margin-bottom: 10px;
            flex-grow: 1;
            /* Allow the field to grow to fill remaining space */
        }

        .field-items {
    display: block;
    padding: 10px;
 
    border: 1px solid #ccc;
    border-radius: 4px;
    margin-bottom: 20px;
    /* Adjust the margin between items */
    cursor: pointer;
    text-decoration: none;
    color: #333;
    font-size: 19px;
    transition: background-color 0.3s; /* Add transition for smooth effect */
}

.field-items:hover {
    background-color: #f0f0f0; /* Set the background color on hover */
    text-decoration: none;
    color: #000; /* Change text color on hover */
}

        .field-items.active {
            background-color: #007bff;
            color: #330f0f;

        }

        .navbar {
    background-color: #212529;
    padding: 10px 0; /* Adjust the padding to control the height of the navbar */
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #ffffff;
    height: 60px; /* Adjust the height of the navbar */
}

.navbar a {
    color: #ffffff;
    text-decoration: none;
    font-size: 1rem;
    margin: 0 15px; /* Adjust the space between links */
}

.navbar-links {
    display: flex;
    align-items: center;
}

.navbar-links-right {
    display: flex;
    align-items: center;
}

.navbar-brand span {
    color: #007bff;
    margin-left: 5px;
}

.navbar-brand i {
    font-size: 1.5rem; /* Adjust the size of the icon */
    margin-left: 5px;
}

        .cancel-btn {
    background-color: red;
    color: white;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    border-radius: 3px;
}

.cancel-btn:hover {
    background-color: rgb(252, 196, 196);
}
/* Adjust margin for the first and last fields */
.field:first-child {
    margin-top: 10px;
}

.field:last-child {
    margin-bottom: 0;
}

.profile-info {
        border: 1px solid #ccc;
        padding: 10px;
        margin-top: 20px;
        height: 400px;
        width: 850px;
    }
    .profile-info > div {
    margin-bottom: 20px; /* Add margin-bottom for spacing between div elements */
}
.address-box {
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 5px;
    background-color: #f9f9f9;
    position: relative;
}
.profile-img img {
    width: 100%; /* Set the width of the image to fill the container */
    height: 100%; /* Set the height of the image to fill the container */
    border-radius: 50%; /* Make the image round */
}

.profile-picture {
    float: right; /* Float profile picture to the right */
    margin-left: 20px; /* Add margin between profile info and picture */
    width: 100px; /* Set the width of the profile picture container */
    height: 100px; /* Set the height of the profile picture container */
}
.btn-cancel {
    background-color: red; /* Set the background color to red */
    color: white; /* Set the text color to white */
    border: none; /* Remove border */
    padding: 5px 10px; /* Add padding */
    cursor: pointer; /* Change cursor to pointer */
}

.btn-cancel:hover {
    background-color: darkred; /* Change background color on hover */
}
.content-box {
    position: relative;
    margin-top: 30px;
    margin-left: 20px;
  
    
}


.options-menu {
    position: absolute;
    top: 0;
    right: 0;
    padding: 10px;
    cursor: pointer;
    z-index: 1; /* Ensure the options menu appears above other elements */
}

.profile-info {
    position: relative;
}
.profile-picture {
    margin-bottom: 10px; /* Adjust the bottom margin as needed */
    margin-right: 10px;
    margin-top: 10px;
}
.options-dropdown {
    position: absolute;
    top: 30px; /* Adjust this value to position the dropdown relative to the three dots */
    right: 0;
    background-color: #fff; /* Background color of the dropdown */
    border: 1px solid #ccc; /* Border of the dropdown */
    border-radius: 5px; /* Border radius to make it rounded */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Box shadow for a subtle effect */
    padding: 5px; /* Padding inside the dropdown */
    z-index: 999; /* Ensure the dropdown is above other elements */
}

.options-dropdown a {
    display: block;
    padding: 8px 10px;
    color: #333; /* Text color of the options */
    text-decoration: none;
    transition: background-color 0.3s; /* Smooth transition for background color */
}

.options-dropdown a:hover {
    background-color: #f5f5f5; /* Background color on hover */
}.bottom-div {
    background-color: #1574f8; /* Example background color */
    margin-top: 20px; /* Add margin top for spacing */
    display: flex; /* Use flexbox to align items */
    flex-direction: column; /* Stack items vertically */
    justify-content: flex-start; /* Align items vertically at the start */
    align-items: center; /* Center items horizontally */
    color: white; /* Set text color to white */
    padding: 20px; /* Add padding */
}

.headers {
    display: flex; /* Use flexbox to align headers */
    justify-content: space-between; /* Evenly space headers */
    width: 100%; /* Ensure headers span full width */
}

.subscribe-text {
    margin-bottom: 10px; /* Add margin bottom for spacing */
}

.email-field {
    display: flex; /* Use flexbox to align items */
    align-items: center; /* Center items vertically */
    justify-content: flex-end; /* Align items to the right */
    border-radius: 20px; /* Add border radius */
    overflow: hidden; /* Hide overflow content */
    align-self: flex-end; /* Align email field to the flex-end of the bottom div */
}

#emailInput {
    padding: 10px; /* Add padding */
    border: none; /* Remove border */
    border-top-left-radius: 20px; /* Add border radius for top-left */
    background-color: #555; /* Dark grey background color */
    color: white; /* Text color */
    border-bottom-left-radius: 20px; /* Add border radius for bottom-left */
}

#submitEmailBtn {
    background-color: #fff; /* Button background color */
    color: #1574f8; /* Button text color */
    border: none; /* Remove border */
    padding: 10px; /* Add padding */
    cursor: pointer; /* Change cursor to pointer */
    border-top-right-radius: 20px; /* Add border radius for top-right */
    border-bottom-right-radius: 20px; /* Add border radius for bottom-right */
}

#submitEmailBtn:hover {
    background-color: #f0f0f0; /* Change background color on hover */
}
.icon-container {
    display: flex;
    justify-content: center;
    margin-top: 10px; /* Adjust as needed */
    color: #555;
    font-size: 28px; /* Increase the size of the icons */
}

.icon-container i {
    margin: 0 5px; /* Adjust as needed */
}
.pagination button {
    background-color: #007bff;
    color: #fff;
    border: none;
    padding: 8px 16px;
    margin: 0 5px;
    cursor: pointer;
    border-radius: 50px;
}

.pagination button:hover {
    background-color: #afd2f7;
}
#walletContainer {
    display: none; /* Hide the container by default */
    position: absolute;
    top: 40%; /* Center vertically */
    left: 30%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Center the container */
    width: 400px; /* Adjust width as needed */
    height: 300px; /* Adjust height as needed */
    background-color: #fff; /* Background color of the wallet container */
    border: 2px solid #110101; /* Border of the wallet container */
    padding: 20px; /* Padding inside the wallet container */
    z-index: 999; /* Ensure the wallet container is above other elements */
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5); /* Add shadow for depth */
}

.wallet-heading {
    text-align: center; /* Align the heading to center */
    background-color: #212529;
    color: #ffffff; /* Text color of the heading */
    margin-top: 0; /* Remove default margin */
    
}

.balance-container {
    text-align: center; /* Align the balance to center */
}

.balance {
    font-family: Arial, sans-serif; /* Specify font family */
    font-size: 24px; /* Adjust font size as needed */
    color: #020000; /* Text color of the balance */
}
.wallethistory-container {
    overflow-y: auto; /* Add vertical scrolling */
    max-height: 150px; /* Adjust maximum height as needed */
}
.pagination-button {
    padding: 4px 8px; /* Adjust padding to reduce button size */
    font-size: 8px; /* Adjust font size */
}
.invoice-btn {
  font-size: 12px; /* Adjust the font size as needed */
  padding: 5px 10px; /* Adjust the padding to reduce the size */
  border-radius: 5px; /* Add border radius for rounded corners */
  background-color: #f0f0f0; /* Add background color */
  color: #333; /* Add text color */
  border: 1px solid #ccc; /* Add border */
}

/* Hover effect */
.invoice-btn:hover {
  background-color: #e0e0e0; /* Change background color on hover */
}

    </style>
</head>

<body>
    <!-- Navbar -->
    <div class="navbar">
        <div class="navbar-brand">
      <a class="navbar-brand" href="">headphonecart<span> <i class="fas fa-headphones"></i></span></a>
        </div>
        <div class="navbar-links">
            <a href="/home">Home</a>
            <a href="/shop">Shop</a>
            <a href="">About us</a>
            <a href="">Contact us</a>
        </div>
        <div class="navbar-links-right">
            <a class="nav-link" href="/wishlist"><i class="fa-solid fa-heart"></i> Fav</a>
            <a class="nav-link" href="/cart"><i class="fas fa-shopping-cart"></i> Cart</a>
            <a class="nav-link" href=""><i class="fas fa-user"></i> Profile</a>
            <a href="/logout">Logout</a>
        </div>
    </div>

    <!-- Main content -->
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="field">
                <a href="#" class="field-items" onclick="showOrders()"><i class="fa-solid fa-bag-shopping"></i> Orders</a>
            </div>
            <div class="field">
                <a href="#" class="field-items" onclick="showProfile()"><i class="fa-solid fa-user"></i>  profile</a>
            </div>
            <div class="field">
                <a href="#" class="field-items" onclick="showWallet()"><i class="fa-solid fa-wallet"></i> wallet</a>
            </div>
         
        </div>
       <!-- pagination for table -->

    

<!-- ////////////////////////////////////////////////////////order table/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<div class="content-boxes" id="ordersTable">
    <div class="table-header">
       
        <div class="pagination">
            <button id="prevPageBtn" onclick="showPrevPage()" class="pagination-button"><i class="fa-solid fa-less-than"></i></button>
            <span id="currentPage">Page <%= currentPage %></span>
            <button id="nextPageBtn" onclick="showNextPage()" class="pagination-button"><i class="fa-solid fa-greater-than"></i></button>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>User</th>
                <th>Address</th>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total Price</th>
                <th>Status</th>
                <th>Payment Method</th>
                <th>Action</th>
                <th>      </th>
            </tr>
        </thead>
        <tbody id="ordersBody">
            <% Orders.forEach((order) => { %>
                <tr>
                    <td><%= User.name %></td>
                    <td>
                        <% order.addresses.forEach((address) => { %>
                            <%= address.address %>, <%= address.city %>,<%= address.state %>, <%= address.country %>, <%= address.zipCode %> <!-- Display address details -->
                        <% }); %>
                    </td>
                    <td>
                        <% order.items.forEach((item) => { %>
                            <%= item.product.name %><br>
                        <% }); %>
                    </td>
                    <td>
                        <% order.items.forEach((item) => { %>
                            <%= item.quantity %><br>
                        <% }); %>
                    </td>
                    <td>
                        <% order.items.forEach((item) => { %>
                            <%= item.product.price %><br>
                        <% }); %>
                    </td>
                    <td>
                        <%= order.total %>
                    </td>
                    <td>
                        <span class="
                            <% if (order.status === 'cancelled') { %>
                                text-danger
                            <% } else if (order.status === 'pending') { %>
                                text-warning
                            <% } else if (order.status.toLowerCase() === 'success') { %>
                                text-success
                            <% } %>">
                            <%= order.status %>
                        </span>
                    </td>
                    <td>
                        <%= order.paymentMethod %>
                    </td>
                    <td>
                        <% if (order.status.toLowerCase() === 'pending') { %>
                            <form id="cancelForm_<%= order._id %>" action="/cancelOrder/<%= order._id %>" method="POST">
                                <button class="btn btn-cancel" type="submit">Cancel</button>
                            </form>
                        <% } else if (order.status.toLowerCase() === 'success') { %>
                            <% order.items.forEach((item) => { %>
                                <form id="returnForm_<%= order._id %>" action="/returnOrder/<%= order._id %>" method="POST">
                                    <button class="btn btn-return btn-danger" type="submit" data-productname="<%= item.product.name %>">Return</button>
                                </form>
                            <% }); %>
                            
                        <% } %>
                    </td>
                    <td>
                        <% if (order.status.toLowerCase() === 'success') { %>
                            <button class="invoice-btn" data-order-id="<%= order._id %>">Invoice</button>
                        <% } %>
                    </td>
                </tr>
            <% }); %>
        </tbody>
        
    </table>
</div>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
   document.querySelectorAll('form').forEach(form => {
    form.addEventListener('submit', async function(event) {
        event.preventDefault();
        console.log('Form submitted:', this.id);
        swal({
            title: 'Are you sure?',
            text: this.id.includes('returnForm') ? `Are you sure you want to return ${this.querySelector('.btn-return').dataset.productname}?` : 'Once cancelled, you will not be able to undo this action!',
            icon: 'warning',
            buttons: true,
            dangerMode: true,
        }).then((willProceed) => {
            if (willProceed) {
                const orderId = this.getAttribute('id').split('_')[1];
                console.log('Order ID:', orderId);
                fetch(this.getAttribute('action'), { method: 'POST' })
                    .then(response => {
                        if (response.ok) {
                            const action = this.id.includes('cancelForm') ? 'canceled' : 'returned';
                            console.log('Action:', action);
                            swal('Success!', `Order ${action} successfully`, 'success').then(() => {
                                window.location.reload();
                            });
                        } else {
                            const action = this.id.includes('cancelForm') ? 'cancel' : 'return';
                            console.log('Error:', action);
                            swal('Error!', `Failed to ${action} the order`, 'error');
                        }
                    })
                    .catch(error => {
                        console.error(`Error ${action}ing order:`, error);
                        const action = this.id.includes('cancelForm') ? 'cancel' : 'return';
                        console.log('Error:', action);
                        swal('Error!', `Failed to ${action} the order`, 'error');
                    });
            } else {
                swal('Cancelled', 'Your action is cancelled :)', 'info');
            }
        });
    });
});
//////////////////////////////////////
// Function to calculate the difference in days between two dates
function dateDiffInDays(a, b) {
        const diffInMs = b - a;
        return Math.floor(diffInMs / (1000 * 60 * 60 * 24));
    }

    // Loop through each return form
    <% Orders.forEach(order => { %>
    document.querySelectorAll('form[id^="returnForm_<%= order._id %>"]').forEach(form => {
        const orderId = '<%= order._id %>'; // Get order ID from the template
        const orderDate = new Date('<%= order.createdAt %>'); // Get order creation date
        
        const currentDate = new Date(); // Get current date
        
        // Calculate the difference in days between current date and order date
        const daysDifference = dateDiffInDays(orderDate, currentDate);
        
        // If 7 days have passed since the order date, disable the return button and show the Download button
        if (daysDifference >= 7) {
            const returnButton = form.querySelector('.btn-return');
            returnButton.disabled = true; // Disable the return button
            returnButton.style.display = 'none'; // Hide the return button
            returnButton.innerHTML = `Return (${7 - daysDifference} days remaining)`
         
            
            // Insert the Download button after the return button
            // form.appendChild(downloadButton);
        }
    });
<% }); %>

document.addEventListener('DOMContentLoaded', function() {
    var invoiceButtons = document.querySelectorAll('.invoice-btn');
    invoiceButtons.forEach(function(button) { 
        button.addEventListener('click', function() {
            var orderId = this.getAttribute('data-order-id');
            console.log(orderId); // Verify that orderId is retrieved correctly

            // Dynamically create a form element
            var form = document.createElement('form');
            form.setAttribute('method', 'GET');
            form.setAttribute('action', `/download-invoice/${orderId}`);

            // Create a hidden input field for orderId
            var orderIdInput = document.createElement('input');
            orderIdInput.setAttribute('type', 'hidden');
            orderIdInput.setAttribute('name', 'orderId');
            orderIdInput.setAttribute('value', orderId);

            // Append the input field to the form
            form.appendChild(orderIdInput);

            // Append the form to the document body
            document.body.appendChild(form);

            // Submit the form
            form.submit();

            // Remove the form from the document body after submission
            document.body.removeChild(form);
        });
    });
});



</script>



  
  <!-- Modal -->
  <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editUserModalLabel">Edit User Details</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="editUserForm" action="/editUser" method="POST" onsubmit="return validateForm()">
            <input type="number" hidden id="val" name="val" value="1">

            <div class="form-group">
              <label for="editName">Name</label>
              <input type="text" class="form-control" id="editName" name="editName" placeholder="Enter Name" value="<%= User.name %>"  required>
            </div>
            <div class="form-group">
              <label for="editEmail">Email address</label>
              <input type="email" class="form-control" id="editEmail" name="editEmail" aria-describedby="emailHelp" value="<%=User.email%>"  placeholder="Enter Email" required>
            </div>
            <div class="form-group">
              <label for="editPhoneNumber">Phone Number</label>
              <input type="tel" class="form-control" id="editPhoneNumber" name="editPhoneNumber" placeholder="Enter Phone Number" value="<%=User.number%>"  required>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
          </form>
        </div>
      </div>
    </div>
  </div>
<!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
<!-- Add Address Modal -->
<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Address Form -->
          <form id="addAddressForm" action="/save-address" method="post">
            <div class="form-group">
              <label for="address">Address:</label>
              <input type="text" class="form-control" id="address" name="address" placeholder="Enter address" required>
              <div class="invalid-feedback">Empty space is not allowed</div>

            </div>
            <div class="form-group">
              <label for="street">Street:</label>
              <input type="text" class="form-control" id="street" name="street" placeholder="Enter street" required>
              <div class="invalid-feedback">Empty space is not allowed</div>

            </div>
            <div class="form-group">
              <label for="city">City:</label>
              <input type="text" class="form-control" id="city" name="city" placeholder="Enter city" required>
              <div class="invalid-feedback">Empty space is not allowed</div>

            </div>
            <div class="form-group">
              <label for="state">State:</label>
              <input type="text" class="form-control" id="state" name="state" placeholder="Enter state" required>
              <div class="invalid-feedback">Empty space is not allowed</div>

            </div>
            <div class="form-group">
              <label for="country">Country:</label>
              <input type="text" class="form-control" id="country" name="country" placeholder="Enter country" required>
              <div class="invalid-feedback">Empty space is not allowed</div>

            </div>
            <div class="form-group">
              <label for="zipCode">Zip Code:</label>
              <input type="text" class="form-control" id="zipCode" name="zipCode" placeholder="Enter zip code" pattern="\d*" title="Please enter only numbers" required>
              <div class="invalid-feedback">Empty space is not allowed</div>

            </div>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary"  onclick="validateAndSubmit()">Save Address</button>
          </form>
        </div>
      </div>
    </div>
</div>

<!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmprofilecongtainermmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm   -->


<!-- Orders Table (Initially Hidden) -->
<!-- Profile Container (Initially Hidden) -->

<div class="content-box" id="profileContainer" style="display: none;">
    <div class="profile-info">
        <div class="profile-picture">
            <!-- Placeholder for profile picture -->
            <div class="profile-img">
                <img src="https://t4.ftcdn.net/jpg/05/89/93/27/360_F_589932782_vQAEAZhHnq1QCGu5ikwrYaQD0Mmurm0N.jpg" alt="img">
            </div>
        </div>
        <div class="options-menu">
            <i class="fa-solid fa-ellipsis-vertical" onclick="toggleOptions()"></i>
            <div id="options-dropdown" class="options-dropdown" style="display: none;">
                <a href="#" onclick="showAddAddress()">Add Address</a>
                <a href="/resetPassword">Reset password</a>

               
            </div>
        </div>
        <div>
            <strong>Name:</strong> <span id="userName"><%= User.name %></span>
        </div>
        <div>
            <strong>Email:</strong> <span id="userEmail"><%= User.email %></span>
        </div>
        <div>
            <strong>Phone:</strong> <span id="userPhone"><%= User.number %></span>
        </div>
        <div>
            <strong>ReferalCode:</strong><span id="userReferal"><%=User.referralCode %></span>
        </div>
        <% addresses.forEach((address,i)=>{ %>
            <div class="address-box">
                <strong>Address<%=i+1%>:</strong> <span id="userAddress"><%= address.address %>, <%= address.street %>,<%= address.city %>, <br><%= address.state %>,<%= address.country%>,<%= address.zipCode%></span>
                <a href="/addresses/<%= address._id %>"><i class="fa-solid fa-pen-to-square"></i></a>
                <a href="/addresses/<%= address._id %>" class="btn" onclick="event.preventDefault(); deleteAddress('<%= address._id %>')"><i class="fa-solid fa-trash"></i></a>
            </div>
        <% }) %>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editUserModal">
            Edit User Details
        </button>
    </div>
</div>
         
</div>
<!-- //////////////////////////////////////////////////////////////////////forCoupoons/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->

<!-- Coupons Container (Initially Hidden) -->
<div class="content-box" id="walletContainer" style="display: none;">
    <div class="wallet">
        <h4 class="wallet-heading">Wallet </h4>
        <div class="balance-container">
            <% if (wallet) { %>
                <p class="balance"><%= wallet.balance %> INR</p> <!-- Assuming the balance is in INR -->
            <% } else { %>
                <p>No wallet balance available</p>
            <% } %>
        </div>
        <div class="wallethistory-container">
            <h5>Wallet History</h5>
            <div class="wallethistory">
                <% if (wallet && wallet.wallethistory.length > 0) { %>
                    <% wallet.wallethistory.forEach(function(history) { %>
                        <%=history.orderId%>
                        <p><%= history.process %> - <%= history.amount %> INR - <%= history.orderId ? 'Order ID: ' + history.orderId + ' - ' : '' %><%= history.date.toLocaleString() %></p>
                    <% }); %>
                <% } else { %>
                    <p>No wallet history available</p>
                <% } %>
            </div>
        </div>
    </div> 
</div>



<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<div class="bottom-div">
    <div class="headers">
        <div>
            <h3>headphone cart</h3>
            <div class="icon-container">
                <i class="fab fa-facebook"></i>
                <i class="fab fa-twitter"></i>
                <i class="fab fa-youtube"></i>
            </div>
        </div>
        <h3>Blog info</h3>
        <h3>Company info</h3>
    </div>
    <div class="subscribe-text">
        <p>Subscribe</p>
    </div>
    <div class="email-field">
        <input type="email" id="emailInput" placeholder="Enter your email">
        <button id="submitEmailBtn">Submit</button>
    </div>
</div>




        <!-- JavaScript to toggle visibility of orders table -->
        <script>
function showOrders() {
    var walletContainer = document.getElementById("walletContainer");
    var profileContainer = document.getElementById("profileContainer");
    var ordersTable = document.getElementById("ordersTable");

    // Hide wallet container and profile container
    walletContainer.style.display = "none";
    profileContainer.style.display = "none";

    // Toggle visibility of orders table
    if (ordersTable.style.display === "none" || ordersTable.style.display === "") {
        ordersTable.style.display = "block"; // Show the container
    } else {
        ordersTable.style.display = "none"; // Hide the container
    }
}

function showProfile() {
    var walletContainer = document.getElementById("walletContainer");
    var profileContainer = document.getElementById("profileContainer");
    var ordersTable = document.getElementById("ordersTable");

    // Hide wallet container and orders table
    walletContainer.style.display = "none";
    ordersTable.style.display = "none";

    // Toggle visibility of profile container
    if (profileContainer.style.display === "none" || profileContainer.style.display === "") {
        profileContainer.style.display = "block"; // Show the container
    } else {
        profileContainer.style.display = "none"; // Hide the container
    }
}
function showWallet() {
    var walletContainer = document.getElementById("walletContainer");
    var profileContainer = document.getElementById("profileContainer");
    var ordersTable = document.getElementById("ordersTable");
    
    // Hide profile container and orders table
    profileContainer.style.display = "none";
    ordersTable.style.display = "none";

    // Toggle visibility of wallet container
    if (walletContainer.style.display === "none" || walletContainer.style.display === "") {
        walletContainer.style.display = "block"; // Show the container
    } else {
        walletContainer.style.display = "none"; // Hide the container
    }
}

 // Define the deleteAddress function
 function deleteAddress(addressId) {
        // Display confirmation dialog
        swal({
            title: 'Are you sure?',
            text: 'Once deleted, you will not be able to recover this address!',
            icon: 'warning',
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {
                // If the user confirms deletion, send a DELETE request to the server
                fetch(`/addresses/${addressId}`, { method: 'DELETE' })
                    .then(response => {
                        if (response.ok) {
                            // If the request is successful, display success message
                            swal('Success!', 'Address deleted successfully', 'success').then(() => {
                                // Reload the page to reflect the changes
                                window.location.reload();
                            });
                        } else {
                            // If the request fails, display an error message
                            swal('Error!', 'Failed to delete address', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error deleting address:', error);
                        // If there is an error, display an error message
                        swal('Error!', 'Failed to delete address', 'error');
                    });
            } else {
                // If the user cancels deletion, do nothing
                swal('Cancelled', 'Your address is safe :)', 'info');
            }
        });
    }
    function toggleOptions() {
    const dropdown = document.getElementById('options-dropdown');
    dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
}

function showAddAddress() {
    $('#addAddressModal').modal('show'); // Show the Bootstrap modal for adding an address
}


function showAddProfilePicture() {
    // Code to show add profile picture form
}

function removeProfilePicture() {
    // Code to remove profile picture
}




// Function to show previous page
function showPrevPage() {
        if (<%= currentPage %> > 1) {
            const prevPage = <%= currentPage %> - 1;
            window.location.href = `/userProfile?page=${prevPage}`;
        }
    }

    // Function to show next page
    function showNextPage() {
        const totalPages = <%= totalPages %>;
        if (<%= currentPage %> < totalPages) {
            const nextPage = <%= currentPage %> + 1;
            window.location.href = `/userProfile?page=${nextPage}`;
        }
    } 
    function validateAndSubmit(event) {
        const inputs = document.querySelectorAll('#addAddressForm input');
        let isValid = true;

        inputs.forEach(input => {
            if (input.value.trim() === '') {
                isValid = false;
                input.classList.add('is-invalid');
            } else {
                input.classList.remove('is-invalid');
            }
        });

        if (!isValid) {
            event.preventDefault(); // Prevent form submission if any field is empty
            return;
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Add event listener to form submission
        const form = document.getElementById('addAddressForm');
        form.addEventListener('submit', validateAndSubmit);

        // Add event listener to each input field to remove error message on input
        const inputs = document.querySelectorAll('#addAddressForm input');
        inputs.forEach(input => {
            input.addEventListener('input', function() {
                if (this.value.trim() !== '') {
                    this.classList.remove('is-invalid');
                }
            });
        });
    });
    function validateForm() {
    var name = document.getElementById("editName").value.trim();
    var email = document.getElementById("editEmail").value.trim();
    var phoneNumber = document.getElementById("editPhoneNumber").value.trim();

    if (name === "" || email === "" || phoneNumber === "") {
      alert("Please fill out all fields.");
      return false; // Prevent form submission
    }

    // You can add more specific validation if needed, such as email format validation, etc.

    return true; // Allow form submission
  }
        </script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.7.6/lottie.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>


</body>

</html>