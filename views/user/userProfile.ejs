<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Page Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://kit.fontawesome.com/a076d05399.js"></script> <!-- Font Awesome for icons -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Include SweetAlert CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.css">

<!-- Include SweetAlert JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>



    <style>
        /* Your CSS styles */
        .container {
            display: flex;
            height: 100vh;
            margin-left: 0px;
        }

        .sidebar {
            background-color: #f0f0f0;
            width: 200px;
            /* Adjust as needed */
            padding: 20px;
            display: flex;
            flex-direction: column;
            height: 60vh;
            /* Adjust the height here */
            margin-left: 0px;
        }

        .content-box {
            .content-box {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 20px;
    margin-bottom: 20px;
}

/* Optional: Add styling to the table */
.table {
    width: 100%;
    border-collapse: collapse;
}

.table th, .table td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
}

.table th {
    background-color: #f2f2f2;
}
       flex: 1;
            padding: 20px;
        }

        .field {
            margin-top: 20px;
            /* Adjust the margin top inside the sidebar */
            margin-bottom: 10px;
            flex-grow: 1;
            /* Allow the field to grow to fill remaining space */
        }

        .field-items {
            display: block;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 20px;
            /* Adjust the margin between items */
            cursor: pointer;
            text-decoration: none;
            color: #333;
        }

        .field-items:hover {
            background-color: #f0f0f0;
        }

        .field-items.active {
            background-color: #007bff;
            color: #fff;
        }

        .navbar {
    background-color: #212529;
    padding: 10px 0; /* Adjust the padding to control the height of the navbar */
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #ffffff;
    height: 60px; /* Adjust the height of the navbar */
}

.navbar a {
    color: #ffffff;
    text-decoration: none;
    font-size: 1rem;
    margin: 0 15px; /* Adjust the space between links */
}

.navbar-links {
    display: flex;
    align-items: center;
}

.navbar-links-right {
    display: flex;
    align-items: center;
}

.navbar-brand span {
    color: #007bff;
    margin-left: 5px;
}

.navbar-brand i {
    font-size: 1.5rem; /* Adjust the size of the icon */
    margin-left: 5px;
}

        .cancel-btn {
    background-color: red;
    color: white;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    border-radius: 3px;
}

.cancel-btn:hover {
    background-color: rgb(252, 196, 196);
}
.sidebar .field:nth-child(2) {
    margin-top: 10px; /* Adjust the value as needed */
}
.sidebar .field:first-child {
    margin-bottom: -196px; /* Adjust the value as needed */
}

.profile-info {
        border: 1px solid #ccc;
        padding: 10px;
        margin-top: 20px;
        height: 400px;
    }
    .profile-info > div {
    margin-bottom: 20px; /* Add margin-bottom for spacing between div elements */
}
.address-box {
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 5px;
    background-color: #f9f9f9;
    position: relative;
}
.profile-img img {
    width: 100%; /* Set the width of the image to fill the container */
    height: 100%; /* Set the height of the image to fill the container */
    border-radius: 50%; /* Make the image round */
}

.profile-picture {
    float: right; /* Float profile picture to the right */
    margin-left: 20px; /* Add margin between profile info and picture */
    width: 100px; /* Set the width of the profile picture container */
    height: 100px; /* Set the height of the profile picture container */
}
.btn-cancel {
    background-color: red; /* Set the background color to red */
    color: white; /* Set the text color to white */
    border: none; /* Remove border */
    padding: 5px 10px; /* Add padding */
    cursor: pointer; /* Change cursor to pointer */
}

.btn-cancel:hover {
    background-color: darkred; /* Change background color on hover */
}
.content-box {
    position: relative;
}

.options-menu {
    position: absolute;
    top: 0;
    right: 0;
    padding: 10px;
    cursor: pointer;
    z-index: 1; /* Ensure the options menu appears above other elements */
}

.profile-info {
    position: relative;
}
.profile-picture {
    margin-bottom: 10px; /* Adjust the bottom margin as needed */
    margin-right: 10px;
    margin-top: 10px;
}
.options-dropdown {
    position: absolute;
    top: 30px; /* Adjust this value to position the dropdown relative to the three dots */
    right: 0;
    background-color: #fff; /* Background color of the dropdown */
    border: 1px solid #ccc; /* Border of the dropdown */
    border-radius: 5px; /* Border radius to make it rounded */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Box shadow for a subtle effect */
    padding: 5px; /* Padding inside the dropdown */
    z-index: 999; /* Ensure the dropdown is above other elements */
}

.options-dropdown a {
    display: block;
    padding: 8px 10px;
    color: #333; /* Text color of the options */
    text-decoration: none;
    transition: background-color 0.3s; /* Smooth transition for background color */
}

.options-dropdown a:hover {
    background-color: #f5f5f5; /* Background color on hover */
}


    </style>
</head>

<body>
    <!-- Navbar -->
    <div class="navbar">
        <div class="navbar-brand">
            <a class="navbar-brand" href="">headphonecart<span> <i class="fas fa-headphones"></i></span></a>
        </div>
        <div class="navbar-links">
            <a href="/home">Home</a>
            <a href="/shop">Shop</a>
            <a href="">About us</a>
            <a href="">Contact us</a>
        </div>
        <div class="navbar-links-right">
            <a class="nav-link" href="/cart"><i class="fas fa-shopping-cart"></i> Cart</a>
            <a class="nav-link" href=""><i class="fas fa-user"></i> Profile</a>
            <a href="/logout">Logout</a>
        </div>
    </div>

    <!-- Main content -->
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="field">
                <a href="#" class="field-items" onclick="showOrders()">Orders</a>
            </div>
            <div class="field">
                <a href="#" class="field-items" onclick="showProfile()">profile</a>
            </div>
        </div>
       <!-- pagination for table -->





   <div class="content-box" id="ordersTable">
    <div class="table-header">
        <h2>Orders</h2>
        <div class="pagination">
            <button id="prevPageBtn" onclick="showPrevPage()">Previous</button>
            <span id="currentPage">Page <%= currentPage %></span>
            <button id="nextPageBtn" onclick="showNextPage()">Next</button>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total Price</th>
                <th>Status</th>
                <th>Payment Method</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="ordersBody">
            <% Orders.forEach((order) => { %>
                <tr>
                    <td>
                        <% order.items.forEach((item) => { %>
                            <%= item.product.name %><br>
                        <% }); %>
                    </td>
                    <td>
                        <% order.items.forEach((item) => { %>
                            <%= item.quantity %><br>
                        <% }); %>
                    </td>
                    <td>
                        <% order.items.forEach((item) => { %>
                            <%= item.product.price %><br>
                        <% }); %>
                    </td>
                    <td>
                        <%= order.total %>
                    </td>
                    <td>
                        <span class="
                            <% if (order.status === 'cancelled') { %>
                                text-danger
                            <% } else if (order.status === 'pending') { %>
                                text-warning
                            <% } else if (order.status.toLowerCase() === 'success') { %>
                                text-success
                            <% } %>">
                            <%= order.status %>
                        </span>
                    </td>
                    <td>
                        <%= order.paymentMethod %>
                    </td>
                    <td>
                        <% if (order.status.toLowerCase() === 'pending') { %>
                            <form id="cancelForm_<%= order._id %>" action="/cancelOrder/<%= order._id %>" method="POST">
                                <button class="btn btn-cancel" type="submit">Cancel</button>
                            </form>
                        <% } else if (order.status.toLowerCase() === 'success') { %>
                            <% order.items.forEach((item) => { %>
                                <form id="returnForm_<%= order._id %>" action="/returnOrder/<%= order._id %>" method="POST">
                                    <button class="btn btn-return btn-danger" type="submit" data-productname="<%= item.product.name %>">Return</button>
                                </form>
                            <% }); %>
                        <% } %>
                    </td>
                </tr>
            <% }); %>
            
        </tbody>
    </table>
</div>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
   // Modify existing JavaScript code
   document.querySelectorAll('form').forEach(form => {
    form.addEventListener('submit', async function(event) {
        event.preventDefault();
        console.log('Form submitted:', this.id);
        swal({
            title: 'Are you sure?',
            text: this.id.includes('returnForm') ? `Are you sure you want to return ${this.dataset.productname}?` : 'Once cancelled, you will not be able to undo this action!',
            icon: 'warning',
            buttons: true,
            dangerMode: true,
        }).then((willProceed) => {
            if (willProceed) {
                const orderId = this.getAttribute('id').split('_')[1];
                console.log('Order ID:', orderId);
                fetch(this.getAttribute('action'), { method: 'POST' })
                    .then(response => {
                        if (response.ok) {
                            const action = this.id.includes('cancelForm') ? 'canceled' : 'returned';
                            console.log('Action:', action);
                            swal('Success!', `Order ${action} successfully`, 'success').then(() => {
                                window.location.reload();
                            });
                        } else {
                            const action = this.id.includes('cancelForm') ? 'cancel' : 'return';
                            console.log('Error:', action);
                            swal('Error!', `Failed to ${action} the order`, 'error');
                        }
                    })
                    .catch(error => {
                        console.error(`Error ${action}ing order:`, error);
                        const action = this.id.includes('cancelForm') ? 'cancel' : 'return';
                        console.log('Error:', action);
                        swal('Error!', `Failed to ${action} the order`, 'error');
                    });
            } else {
                swal('Cancelled', 'Your action is cancelled :)', 'info');
            }
        });
    });
});


</script>



  
  <!-- Modal -->
  <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editUserModalLabel">Edit User Details</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="editUserForm" action="/editUser" method="POST">
            <input type="number" hidden id="val" name="val" value="1">

            <div class="form-group">
              <label for="editName">Name</label>
              <input type="text" class="form-control" id="editName" name="editName" placeholder="Enter Name" value="<%= User.name %>"  required>
            </div>
            <div class="form-group">
              <label for="editEmail">Email address</label>
              <input type="email" class="form-control" id="editEmail" name="editEmail" aria-describedby="emailHelp" value="<%=User.email%>"  placeholder="Enter Email" required>
            </div>
            <div class="form-group">
              <label for="editPhoneNumber">Phone Number</label>
              <input type="tel" class="form-control" id="editPhoneNumber" name="editPhoneNumber" placeholder="Enter Phone Number" value="<%=User.number%>"  required>
            </div>
            <button type="submit" class="btn btn-primary">Save Changes</button>
          </form>
        </div>
      </div>
    </div>
  </div>
<!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
<!-- Add Address Modal -->
<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Address Form -->
          <form id="addAddressForm" action="/save-address" method="post">
            <div class="form-group">
              <label for="address">Address:</label>
              <input type="text" class="form-control" id="address" name="address" placeholder="Enter address" required>
            </div>
            <div class="form-group">
              <label for="street">Street:</label>
              <input type="text" class="form-control" id="street" name="street" placeholder="Enter street" required>
            </div>
            <div class="form-group">
              <label for="city">City:</label>
              <input type="text" class="form-control" id="city" name="city" placeholder="Enter city" required>
            </div>
            <div class="form-group">
              <label for="state">State:</label>
              <input type="text" class="form-control" id="state" name="state" placeholder="Enter state" required>
            </div>
            <div class="form-group">
              <label for="country">Country:</label>
              <input type="text" class="form-control" id="country" name="country" placeholder="Enter country" required>
            </div>
            <div class="form-group">
              <label for="zipCode">Zip Code:</label>
              <input type="text" class="form-control" id="zipCode" name="zipCode" placeholder="Enter zip code" required>
            </div>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Save Address</button>
          </form>
        </div>
      </div>
    </div>
</div>

<!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm   -->


<!-- Orders Table (Initially Hidden) -->
<!-- Profile Container (Initially Hidden) -->

<div class="content-box" id="profileContainer" style="display: none;">
    <div class="profile-info">
        <div class="profile-picture">
            <!-- Placeholder for profile picture -->
            <div class="profile-img">
                <img src="https://www.svgrepo.com/show/382105/male-avatar-boy-face-man-user-5.svg" alt="img">
            </div>
        </div>
        <div class="options-menu">
            <i class="fa-solid fa-ellipsis-vertical" onclick="toggleOptions()"></i>
            <div id="options-dropdown" class="options-dropdown" style="display: none;">
                <a href="#" onclick="showAddAddress()">Add Address</a>
                <a href="#" onclick="showAddProfilePicture()">Add Profile Picture</a>
                <a href="#" onclick="removeProfilePicture()">Remove Profile Picture</a>
            </div>
        </div>
        <div>
            <strong>Name:</strong> <span id="userName"><%= User.name %></span>
        </div>
        <div>
            <strong>Email:</strong> <span id="userEmail"><%= User.email %></span>
        </div>
        <div>
            <strong>Phone:</strong> <span id="userPhone"><%= User.number %></span>
        </div>
        <% addresses.forEach((address,i)=>{ %>
            <div class="address-box">
                <strong>Address<%=i+1%>:</strong> <span id="userAddress"><%= address.address %>, <%= address.street %>,<%= address.city %>, <br><%= address.state %>,<%= address.country%>,<%= address.zipCode%></span>
                <a href="/addresses/<%= address._id %>"><i class="fa-solid fa-pen-to-square"></i></a>
                <a href="/addresses/<%= address._id %>" class="btn" onclick="event.preventDefault(); deleteAddress('<%= address._id %>')"><i class="fa-solid fa-trash"></i></a>
            </div>
        <% }) %>
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editUserModal">
            Edit User Details
        </button>
    </div>
</div>


 



        <!-- JavaScript to toggle visibility of orders table -->
        <script>
 function showOrders() {
    var ordersTable = document.getElementById("ordersTable");
    var profileContainer = document.getElementById("profileContainer");
    
    // Hide profile container
    profileContainer.style.display = "none";
    
    // Toggle visibility of orders table
    if (ordersTable.style.display === "none") {
        ordersTable.style.display = "block";
        // Here you can add code to fetch and populate the table with orders data dynamically
    } else {
        ordersTable.style.display = "none";
    }
}

function showProfile() {
    var profileContainer = document.getElementById("profileContainer");
    var ordersTable = document.getElementById("ordersTable");
    
    // Hide orders table
    ordersTable.style.display = "none";
    
    // Toggle visibility of profile container
    if (profileContainer.style.display === "none") {
        profileContainer.style.display = "block";
    } else {
        profileContainer.style.display = "none";
    }
}
 // Define the deleteAddress function
 function deleteAddress(addressId) {
        // Display confirmation dialog
        swal({
            title: 'Are you sure?',
            text: 'Once deleted, you will not be able to recover this address!',
            icon: 'warning',
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {
                // If the user confirms deletion, send a DELETE request to the server
                fetch(`/addresses/${addressId}`, { method: 'DELETE' })
                    .then(response => {
                        if (response.ok) {
                            // If the request is successful, display success message
                            swal('Success!', 'Address deleted successfully', 'success').then(() => {
                                // Reload the page to reflect the changes
                                window.location.reload();
                            });
                        } else {
                            // If the request fails, display an error message
                            swal('Error!', 'Failed to delete address', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error deleting address:', error);
                        // If there is an error, display an error message
                        swal('Error!', 'Failed to delete address', 'error');
                    });
            } else {
                // If the user cancels deletion, do nothing
                swal('Cancelled', 'Your address is safe :)', 'info');
            }
        });
    }
    function toggleOptions() {
    const dropdown = document.getElementById('options-dropdown');
    dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
}

function showAddAddress() {
    $('#addAddressModal').modal('show'); // Show the Bootstrap modal for adding an address
}


function showAddProfilePicture() {
    // Code to show add profile picture form
}

function removeProfilePicture() {
    // Code to remove profile picture
}




// Function to show previous page
function showPrevPage() {
        if (<%= currentPage %> > 1) {
            const prevPage = <%= currentPage %> - 1;
            window.location.href = `/userProfile?page=${prevPage}`;
        }
    }

    // Function to show next page
    function showNextPage() {
        const totalPages = <%= totalPages %>;
        if (<%= currentPage %> < totalPages) {
            const nextPage = <%= currentPage %> + 1;
            window.location.href = `/userProfile?page=${nextPage}`;
        }
    }

        </script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>

</html>